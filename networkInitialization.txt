# Part-1: Configuring the docker swarm and overlay network
===========================================================================

1. Firstly, we need to create a docker swarm with the following command

docker swarm init --advertise-addr 192.168.90.43


2. Then the host-1 also needs to input the following command

docker swarm join-token manager

3. Share the token with the other hosts and run the following command from other hosts

docker swarm join --token <token given from terminal> --advertise-addr <host n ip>

4. We need to create a docker overlay network on the host-1

docker network create --attachable --driver overlay test

-> Make sure this network is visible throughout all the other hosts within the network


# Part-2: Creating the Crypto materials using CA server
===========================================================================

1. First, navigate to vm1/create-certificate-with-ca directory and launch the CA server by running

docker-compose up -d

2. Then, we have to enroll CA admin using the fabric-ca-client as well as create crypto for all the peers and users

chmod 777 create-certificate-with-ca.sh
./create-certificate-with-ca.sh


=> Repeat the same steps for all the other hosts


# Part-3: Creating the channel artifacts

1. Navigate to artifacts/channel and run the following command to generte the channel artifacts
chmod 777 create-artifacts.sh
./create-artifacts.sh


# Part-4: Copy the crypto-materila to the other hosts using Git and make sure to give permissions to all the directory
chmod 777 -R *


# Part-5: Run all the respective components containers on the hosts
docker-compose up -d

# part-6: Create channel and join peers to the channel

1. We can create the channel from host-1 by runnung

N.B. 
    make sure to change ip in createChannel() of host-4
    also updateAnchorPeers() with host-4 ip address


chmod 777 createChannel.sh
./createChannel.sh

2. Then, we need to join the peers to the channel using ./joinChannel.sh script from the other hosts as well
on host-2 and host-3, change the IP address in fetchChannelBlock() and updateAnchorPeers() to host-4 ip address

after this, we can check if a particular peer has joined the channel with the followin command

docker exec -it peer0.org1.example.com peer channel list

-> and also, can check the block height of all the peers with the following command

docker exec peer0.org1.example.com peer channel getinfo -c mychannel


